Mean Median Mode 
Given a sorted array A, containing N integers. Calculate and print their Mean, Median and Mode.



1. For both the Mean and Median, display the values with precision up to two decimal places.

2. Print the first Mode that you encounter from the left hand side.



Input Format

First line of input contains integer N - the size of the array. Second line of input contains N integers - elements of the array A.



Output Format

Print Mean, Median and Mode, separated by spaces.



Constraints

1 <= N <=104

0 <= A[i] <=100



Example

Input

8

1 2 3 4 5 5 6 6



Output

4.00 4.50 5



Explanation:



The Mean is 32 / 8 = 4.00 [rounded to 2 decimals]

The Median is (4+5) / 2 = 4.50

For the given example, {5, 6} represents the Mode of the array, we'll print 5 as it's the first Mode encountered.


import java.io.*;
import java.util.*;
import java.util.Map.*;
public class Main 
{

    public static void main(String[] args) 
    {
        int sum=0;
        Scanner scan=new Scanner(System.in);
        int n=scan.nextInt();
        ArrayList<Integer> a=new ArrayList<>();
        float mean,median;
        int mode=0;
        for(int i=0;i<n;i++)
        {
            int e=scan.nextInt();
            a.add(e);
            sum=sum+e;
        }
        mean=(float)sum/n;
        // Collections.sort(a);
        if(a.size()%2==0)
        {
            float x=a.get(n/2-1);
            float y=a.get(n/2);
            median=(x+y)/2;
        }
        else
        {
            median=a.get(n/2);
        }
        LinkedHashMap<Integer,Integer> h=new LinkedHashMap<>();
        for(int i=0;i<n;i++)
        {
            if(h.containsKey(a.get(i)))
            {
                h.put(a.get(i),h.get(a.get(i))+1);
            }
            else
            {
                h.put(a.get(i),1);
            }
        }
        int maxval=0;
        for(Entry<Integer,Integer> entry:h.entrySet())
        {
            int value=entry.getValue();
            if(value>maxval)
            {
                maxval=value;
                mode=entry.getKey();
            }
        }
        System.out.printf("%.2f %.2f %d",mean,median,mode);
    }
}
