Alternate Seating 
You are given an integer N, denoting the number of people who need to be seated, and a list of M seats, where 0 represents a vacant seat and 1 represents an already occupied seat. Find whether all N people can find a seat, provided that no two people can sit next to each other.



Input Format

The first line of the input contains N denoting the number of people. The second line of input contains M denoting the number of seats. The third line of input contains the seats.



Output Format

If all N people can find seats, print YES otherwise NO.



Constraints

1 ≤ N ≤ 105

1 ≤ M ≤ 105

Ai ∈ {0, 1}



Example

Input

2

7

0 0 1 0 0 0 1



Output

YES



Explanation



The two people can sit at index 0 and 4.


import java.io.*;
import java.util.*;

public class Main {

    public static void main(String[] args) {
        Scanner scan=new Scanner(System.in);
        int x=scan.nextInt();
        int n=scan.nextInt();
        int a[]=new int[n];
        for(int i=0;i<n;i++)
        {
            a[i]=scan.nextInt();
        }
        int count=0;
        for(int i=0;i<n;i++)
        {
            if(a[i]==0 & (i==0 || a[i-1]==0) & (i==n-1 || a[i+1]==0))
            {
                a[i]=1;
                count++;
            }
        }
        if(x<=count)
        {
            System.out.println("YES");
        }
        else
        {
            System.out.println("NO");
        }
    }
}
