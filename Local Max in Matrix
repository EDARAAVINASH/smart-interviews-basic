Local Max in Matrix 
Given an integer matrix C with dimensions N × N. Construct a new integer matrix D of size (N - 2) × (N - 2) such that each element D[i][j] represents the maximum value within a 3 × 3 submatrix of C, where the center of the submatrix is located at row i + 1 and column j + 1 in matrix C. We aim to identify the highest value within every continuous 3 × 3 submatrix within C. Print the resulting matrix D.



Input Format

The first line of input contains an integer N. For the next N lines, each line contains N elements separated by space.



Output Format

Print the generated matrix.



Constraints

3 ≤ N ≤ 100

-1000 ≤ Cij ≤ 1000



Example

Input

4

12 9 8 40

5 20 2 6

8 14 6 30

6 2 25 2



Output

20 40

25 30



Explanation



Self Explanatory



import java.io.*;
import java.util.*;

public class Main {

    public static void main(String[] args) {
        Scanner scan=new Scanner(System.in);
        int n=scan.nextInt();
        int a[][]=new int[n][n];
        int out[][]=new int[n-2][n-2];
        for(int i=0;i<n;i++)
        {
            for(int j=0;j<n;j++)
            {
                a[i][j]=scan.nextInt();
            }
        }
        for(int i=0;i<n-2;i++)
        {
            for(int j=0;j<n-2;j++)
            {
                int max=Integer.MIN_VALUE;
                for(int k=i;k<i+3;k++)
                {
                    for(int l=j;l<j+3;l++)
                    {
                        if(a[k][l]>max)
                        {
                            max=a[k][l];
                        }
                    }
                    out[i][j]=max;
                }
            }
        }
        for(int i=0;i<n-2;i++)
        {
            for(int j=0;j<n-2;j++)
            {
                System.out.print(out[i][j]+" ");
            }
            System.out.println();
        }
    }
}
